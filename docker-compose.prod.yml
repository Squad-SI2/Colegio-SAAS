
services:
  db:
    image: postgres:16-alpine           # Imagen liviana de Postgres 16
    container_name: fs_db               # Nombre del contenedor
    environment:                        # Variables para inicializar la DB
      POSTGRES_DB: ${POSTGRES_DB}               # Uso de variables de entorno de .env
      POSTGRES_USER: ${POSTGRES_USER}           # Uso de variables de entorno de .env
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}   # Uso de variables de entorno de .env
    ports:
      - "55432:5432"                    # Puerto host : Puerto predeterminado postgreSQL
    volumes:
      - pgdata:/var/lib/postgresql/data # Datos persistentes (no se pierden)

    healthcheck:
          test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
          interval: 5s
          timeout: 3s
          retries: 20

  #Servicio para el backend
  serv-backend:
    build:
      context: ./backend #solo cuando se usa dockerfile
    container_name: backend
    restart: always
    ports:
      - "8000:8000"  # Exponer el puerto del backend
    env_file:
      - .env  # Cargar variables de entorno desde el archivo .env
    #Para produccion no usar volumen ni command.
    volumes:
      - ./backend:/app  # Monta el código fuente para hot reload
      - backend_static:/app/staticfiles # Estaticos recopilados
      - backend_media:/app/media        # Archivos subidos
    working_dir: /app
    command: /bin/sh -lc "./entrypoint.sh"
    networks:
      - mi_red  # Conectar a la misma red para que se puedan comunicar
    stdin_open: true  # Mantener la terminal abierta para interaccion
    tty: true  # Mantener el contenedor en modo terminal para que funcione el hot reload
    depends_on:
      db:
        condition: service_healthy      # Espera a que la DB este OK


  #Servicio para el frontend (React)
  serv-frontend:
    build:
      context: ./frontend
    # image: node:18
    container_name: frontend
    ports:
      - "5173:5173"   #Puerto de React con vite
    depends_on:
      - serv-backend
    working_dir: /app
    volumes:
      - ./frontend:/app  # Montar el código fuente local para hot reload en el frontend
      # - ./frontend/ssl:/app/ssl # Usar ssl
      - node_modules_frontend:/app/node_modules  # Evitar que los node_modules del host interfieran con los del contenedor
    environment:
      # - CHOKIDAR_USEPOLLING=true    #Activa el hot reload de React
      - HOST=0.0.0.0  # Necesario para que Vite escuche fuera del contenedor
    networks:
      - mi_red


volumes:
  node_modules_frontend:

# Declaracion de redes
networks:
  mi_red:  # Declaramos una red personalizada llamada "mi_red"
    driver: bridge
